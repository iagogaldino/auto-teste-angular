import dotenv from 'dotenv';
import { ChatGPTService } from './src/services/chatgptService';
import { UnitTestRequest } from './src/types/chatgpt';

// Carregar vari√°veis de ambiente
dotenv.config({ path: '.env' });

// Exigir a vari√°vel de ambiente OPENAI_API_KEY (n√£o hardcodear chaves)
if (!process.env.OPENAI_API_KEY) {
  console.error('OPENAI_API_KEY n√£o definida. Configure no arquivo .env');
  process.exit(1);
}


// Exemplo de uso da classe ChatGPTService
async function testChatGPTIntegration() {
  try {
    console.log('üß™ Testando integra√ß√£o com ChatGPT...\n');

    const chatGPTService = new ChatGPTService();

    // Teste de conectividade
    console.log('1. Testando conectividade...');
    const isConnected = await chatGPTService.testConnection();
    console.log(`   Conex√£o: ${isConnected ? '‚úÖ OK' : '‚ùå Falhou'}\n`);

    if (!isConnected) {
      console.log('‚ùå N√£o foi poss√≠vel conectar com ChatGPT. Verifique a API key.');
      return;
    }

    // Exemplo de c√≥digo para gerar teste
    const sampleCode = `
function calculateSum(a: number, b: number): number {
  if (typeof a !== 'number' || typeof b !== 'number') {
    throw new Error('Par√¢metros devem ser n√∫meros');
  }
  return a + b;
}

function divide(a: number, b: number): number {
  if (b === 0) {
    throw new Error('Divis√£o por zero n√£o √© permitida');
  }
  return a / b;
}
`;

    const unitTestRequest: UnitTestRequest = {
      code: sampleCode,
      language: 'typescript',
      framework: 'jest',
      testType: 'unit',
      additionalInstructions: 'Inclua testes para casos de erro e edge cases'
    };

    console.log('2. Gerando teste unit√°rio...');
    console.log('   C√≥digo de exemplo:', sampleCode.trim());
    console.log('   Aguardando resposta do ChatGPT...\n');

    const result = await chatGPTService.generateUnitTest(unitTestRequest);

    console.log('‚úÖ Teste unit√°rio gerado com sucesso!\n');
    console.log('üìù Explica√ß√£o:', result.explanation);
    console.log('\nüß™ Casos de teste:', result.testCases);
    console.log('\nüì¶ Depend√™ncias:', result.dependencies);
    
    if (result.setupInstructions) {
      console.log('\n‚öôÔ∏è Instru√ß√µes de configura√ß√£o:', result.setupInstructions);
    }

    console.log('\nüìÑ C√≥digo do teste gerado:');
    console.log('```typescript');
    console.log(result.testCode);
    console.log('```');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error);
  }
}

// Executar o teste se este arquivo for executado diretamente
if (require.main === module) {
  testChatGPTIntegration();
}

export { testChatGPTIntegration };
